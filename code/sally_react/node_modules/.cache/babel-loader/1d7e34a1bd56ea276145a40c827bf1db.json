{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KCH\\\\Desktop\\\\Be a programmer\\\\Sally\\\\code\\\\sally_react\\\\src\\\\assets\\\\components\\\\surveyPage\\\\Survey.js\";\nimport React from 'react';\nimport './Survey.css'; // 응답이 Text 형태인 질문 => \n//questionInfo = { id, question, type } 가 있어야 한다.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TextTypeQuestion = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"questionBody\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"\\uC9C8\\uBB38 \", props.questionInfo.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: props.questionInfo.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: props.questionInfo.type,\n          name: props.questionInfo.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"\\uB2E4\\uC74C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}; // 응답이 버튼 형태인 질문 =>\n// questionInfo = { id, question, type, options } 가 있어야 한다.\n\n\n_c = TextTypeQuestion;\n\nconst RadioTypeQuestion = props => {\n  const options = props.questionInfo.options.map(e => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [e, \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        name: props.questionInfo.id,\n        value: e\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"questionBody\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"\\uC9C8\\uBB38 \", props.questionInfo.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: props.questionInfo.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        method: \"get\",\n        children: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c2 = RadioTypeQuestion;\nexport default function Survey() {\n  const questionInfos = [{\n    id: '0',\n    question: '성별을 선택해주세요.',\n    type: 'radio',\n    options: ['남성', '여자']\n  }, {\n    id: '1',\n    question: 'string',\n    type: 'text'\n  }, {\n    id: '2',\n    question: 'string',\n    type: 'text'\n  }, {\n    id: '3',\n    question: '지금 피곤한가요?',\n    type: 'radio',\n    options: ['매우 그렇다', '그렇다', '보통이다', '아니다', '전혀 아니다']\n  }];\n  const questionList = questionInfos.map(element => {\n    if (element.type === 'radio') {\n      return /*#__PURE__*/_jsxDEV(RadioTypeQuestion, {\n        questionInfo: element\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }, this);\n    } else if (element.type === 'text') {\n      return /*#__PURE__*/_jsxDEV(TextTypeQuestion, {\n        questionInfo: element\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }, this);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '300px'\n    },\n    children: questionList\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_c3 = Survey;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"TextTypeQuestion\");\n$RefreshReg$(_c2, \"RadioTypeQuestion\");\n$RefreshReg$(_c3, \"Survey\");","map":{"version":3,"sources":["C:/Users/KCH/Desktop/Be a programmer/Sally/code/sally_react/src/assets/components/surveyPage/Survey.js"],"names":["React","TextTypeQuestion","props","questionInfo","id","question","type","RadioTypeQuestion","options","map","e","Survey","questionInfos","questionList","element","height"],"mappings":"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","sourcesContent":["import React from 'react'\r\n\r\nimport './Survey.css'\r\n\r\n// 응답이 Text 형태인 질문 => \r\n//questionInfo = { id, question, type } 가 있어야 한다.\r\nconst TextTypeQuestion = (props)=>{\r\n  return(\r\n  <>\r\n    <div className = 'questionBody'>\r\n      <h3>질문 {props.questionInfo.id}</h3>\r\n      <h4>{props.questionInfo.question}</h4>\r\n      <form>\r\n       <input type = {props.questionInfo.type} name={props.questionInfo.id}  />\r\n       <br/>\r\n       <button type='submit'>다음</button>\r\n       </form>\r\n     </div>\r\n   </>\r\n\r\n   )\r\n\r\n}\r\n\r\n// 응답이 버튼 형태인 질문 =>\r\n// questionInfo = { id, question, type, options } 가 있어야 한다.\r\nconst RadioTypeQuestion = (props) => {\r\n  const options = props.questionInfo.options.map(e => {\r\n    return (\r\n      <>\r\n         {e} <input type=\"radio\" name={props.questionInfo.id} value={e} /> \r\n        {/* <label for={e}>{e}</label><br /> */}\r\n      </>\r\n    )\r\n  }\r\n  );\r\n  return (\r\n    <>\r\n      <div className='questionBody'>\r\n        <h3>질문 {props.questionInfo.id}</h3>\r\n        <h4>{props.questionInfo.question}</h4>\r\n        <form method='get'>\r\n          {options}\r\n        </form>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nexport default function Survey() {\r\n  const questionInfos =[\r\n    { id: '0', question: '성별을 선택해주세요.', type: 'radio', options :['남성', '여자']},\r\n    { id: '1', question: 'string', type: 'text'},\r\n    { id: '2', question: 'string', type: 'text'},\r\n    { id: '3', question: '지금 피곤한가요?', type: 'radio', options: ['매우 그렇다', '그렇다', '보통이다', '아니다', '전혀 아니다'] },\r\n  ]\r\n  const questionList = questionInfos.map(element => {\r\n    if ( element.type === 'radio' ) {\r\n      return (<RadioTypeQuestion questionInfo={element} />)\r\n    }\r\n    else if (element.type === 'text'){ \r\n      return (<TextTypeQuestion questionInfo={element} />)\r\n    }\r\n  });\r\n  return (\r\n    <div style={{  height: '300px' }}>\r\n      {questionList}\r\n    </div>) \r\n}\r\n"]},"metadata":{},"sourceType":"module"}