{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KCH\\\\Desktop\\\\Be a programmer\\\\Sally\\\\code\\\\sally_react\\\\src\\\\assets\\\\components\\\\Login\\\\UserLogin.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { Redirect, BrowserRouter as Router, Switch, Route, Link, useLocation, useHistory } from \"react-router-dom\";\nimport LoginForm from \"./LoginForm\";\nimport RegisterForm from \"./components/RegisterForm\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport { registerUser, loginUser } from \"./service/auth\"; // location.state.user 정보에 따라 페이지를 이동하는 코드를 작성하세요.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UserLogin() {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        children: /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        children: /*#__PURE__*/_jsxDEV(LoginPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/register\",\n        children: /*#__PURE__*/_jsxDEV(RegisterPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n        path: \"/detail\",\n        children: /*#__PURE__*/_jsxDEV(UserDetailPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 7\n  }, this);\n}\n_c = UserLogin;\n\nfunction LoginPage() {\n  _s();\n\n  const history = useHistory(); // 로그인 기능을 구현하세요.\n\n  const handleSubmit = formData => {\n    // loginUser를 활용해 유저 정보를 검색하세요.\n    const user = loginUser(formData);\n    if (!user) return;\n    history.push({\n      pathname: '/detail',\n      state: {\n        user\n      }\n    }); // 유저 정보가 없다면, 로그인이 되지 않습니다.\n    // 유저 정보를 찾으면, location.state.user에 유저 정보를 저장하고 detail page로 이동하세요.\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(LoginForm, {\n      onSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/register\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoginPage, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c2 = LoginPage;\n\nfunction RegisterPage() {\n  _s2();\n\n  const history = useHistory(); // 회원가입 기능을 구현하세요.\n\n  const handleSubmit = formData => {\n    registerUser(formData);\n    history.push('/login'); // registerUser를 활용하여 유저를 등록하세요.\n    // 등록했으면 로그인 페이지로 이동하세요.\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Register Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RegisterForm, {\n      onSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(RegisterPage, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c3 = RegisterPage;\n\nfunction UserDetailPage() {\n  _s3();\n\n  // 회원의 정보를 출력하는 기능을 구현하세요.\n  // 유저 정보는 location.state.user에 있습니다.\n  // PrivateRoute 컴포넌트는 유저 정보가 없을 경우 로그인 페이지로 사용자를 리다이렉트합니다.\n  const location = useLocation();\n  const user = location.state.user;\n  useEmptyLocationState();\n  const email = \"test@email.com\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Welcome!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"em\", {\n        children: [\"email : \", user.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n} // location state를 지우는 헬퍼 함수입니다.\n\n\n_s3(UserDetailPage, \"aCfizoC4OdG6Njdq0Z7upivyBnM=\", false, function () {\n  return [useLocation, useEmptyLocationState];\n});\n\n_c4 = UserDetailPage;\n\nfunction useEmptyLocationState() {\n  _s4();\n\n  const history = useHistory();\n  useEffect(() => {\n    return () => history.replace();\n  }, [history]);\n}\n\n_s4(useEmptyLocationState, \"bz2N+u0mX89LO9zOCfVCA9Sa20M=\", false, function () {\n  return [useHistory];\n});\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"UserLogin\");\n$RefreshReg$(_c2, \"LoginPage\");\n$RefreshReg$(_c3, \"RegisterPage\");\n$RefreshReg$(_c4, \"UserDetailPage\");","map":{"version":3,"sources":["C:/Users/KCH/Desktop/Be a programmer/Sally/code/sally_react/src/assets/components/Login/UserLogin.js"],"names":["React","useEffect","Redirect","BrowserRouter","Router","Switch","Route","Link","useLocation","useHistory","LoginForm","RegisterForm","PrivateRoute","registerUser","loginUser","UserLogin","LoginPage","history","handleSubmit","formData","user","push","pathname","state","RegisterPage","UserDetailPage","location","useEmptyLocationState","email","replace"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,QADF,EAEEC,aAAa,IAAIC,MAFnB,EAGEC,MAHF,EAIEC,KAJF,EAKEC,IALF,EAMEC,WANF,EAOEC,UAPF,QAQO,kBARP;AASA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AAEA,SAASC,YAAT,EAAuBC,SAAvB,QAAwC,gBAAxC,C,CAEA;;;AACA,eAAe,SAASC,SAAT,GAAqB;AAClC,sBACI,QAAC,MAAD;AAAA,2BACE,QAAC,MAAD;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,GAAlB;AAAA,+BACE,QAAC,QAAD;AAAU,UAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAKE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAA,+BACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cALF,eASE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,WAAZ;AAAA,+BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cATF,eAaE,QAAC,YAAD;AAAc,QAAA,IAAI,EAAC,SAAnB;AAAA,+BACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBD;KAtBuBA,S;;AAwBxB,SAASC,SAAT,GAAqB;AAAA;;AACnB,QAAMC,OAAO,GAAGR,UAAU,EAA1B,CADmB,CAEnB;;AAEA,QAAMS,YAAY,GAAIC,QAAD,IAAc;AACjC;AACA,UAAMC,IAAI,GAAGN,SAAS,CAACK,QAAD,CAAtB;AACA,QAAI,CAACC,IAAL,EAAW;AACXH,IAAAA,OAAO,CAACI,IAAR,CAAa;AACXC,MAAAA,QAAQ,EAAE,SADC;AAEXC,MAAAA,KAAK,EAAC;AACJH,QAAAA;AADI;AAFK,KAAb,EAJiC,CAWjC;AACA;AACD,GAbD;;AAeA,sBACE;AAAA,4BACE,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAEF;AAArB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GA3BQF,S;UACSP,U;;;MADTO,S;;AA6BT,SAASQ,YAAT,GAAwB;AAAA;;AACtB,QAAMP,OAAO,GAAGR,UAAU,EAA1B,CADsB,CAEtB;;AAEA,QAAMS,YAAY,GAAIC,QAAD,IAAc;AACjCN,IAAAA,YAAY,CAACM,QAAD,CAAZ;AACAF,IAAAA,OAAO,CAACI,IAAR,CAAa,QAAb,EAFiC,CAIjC;AACA;AACD,GAND;;AAQA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,YAAD;AAAc,MAAA,QAAQ,EAAEH;AAAxB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;IArBQM,Y;UACSf,U;;;MADTe,Y;;AAuBT,SAASC,cAAT,GAA0B;AAAA;;AACxB;AACA;AACA;AACA,QAAMC,QAAQ,GAAGlB,WAAW,EAA5B;AACA,QAAMY,IAAI,GAAGM,QAAQ,CAACH,KAAT,CAAeH,IAA5B;AACAO,EAAAA,qBAAqB;AAErB,QAAMC,KAAK,GAAG,gBAAd;AAEA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAA,6BACE;AAAA,+BAAaR,IAAI,CAACQ,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHF,eAOE;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,C,CAED;;;IAzBSH,c;UAIUjB,W,EAEjBmB,qB;;;MANOF,c;;AA0BT,SAASE,qBAAT,GAAiC;AAAA;;AAC/B,QAAMV,OAAO,GAAGR,UAAU,EAA1B;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACd,WAAO,MAAMgB,OAAO,CAACY,OAAR,EAAb;AACD,GAFQ,EAEN,CAACZ,OAAD,CAFM,CAAT;AAGD;;IANQU,qB;UACSlB,U","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport {\r\n  Redirect,\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useLocation,\r\n  useHistory,\r\n} from \"react-router-dom\";\r\nimport LoginForm from \"./LoginForm\";\r\nimport RegisterForm from \"./components/RegisterForm\";\r\nimport PrivateRoute from \"./components/PrivateRoute\";\r\n\r\nimport { registerUser, loginUser } from \"./service/auth\";\r\n\r\n// location.state.user 정보에 따라 페이지를 이동하는 코드를 작성하세요.\r\nexport default function UserLogin() {\r\n  return (\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Redirect to=\"/login\" />\r\n          </Route>\r\n\r\n          <Route path=\"/login\">\r\n            <LoginPage />\r\n          </Route>\r\n\r\n          <Route path=\"/register\">\r\n            <RegisterPage />\r\n          </Route>\r\n\r\n          <PrivateRoute path=\"/detail\">\r\n            <UserDetailPage />\r\n          </PrivateRoute>\r\n        </Switch>\r\n      </Router>\r\n  );\r\n}\r\n\r\nfunction LoginPage() {\r\n  const history = useHistory();\r\n  // 로그인 기능을 구현하세요.\r\n\r\n  const handleSubmit = (formData) => {\r\n    // loginUser를 활용해 유저 정보를 검색하세요.\r\n    const user = loginUser(formData)\r\n    if (!user) return\r\n    history.push({\r\n      pathname :'/detail',\r\n      state:{\r\n        user\r\n      }\r\n    }) \r\n\r\n    // 유저 정보가 없다면, 로그인이 되지 않습니다.\r\n    // 유저 정보를 찾으면, location.state.user에 유저 정보를 저장하고 detail page로 이동하세요.\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <LoginForm onSubmit={handleSubmit} />\r\n      <div>\r\n        <Link to=\"/register\">Register</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction RegisterPage() {\r\n  const history = useHistory();\r\n  // 회원가입 기능을 구현하세요.\r\n\r\n  const handleSubmit = (formData) => {\r\n    registerUser(formData)\r\n    history.push('/login')\r\n\r\n    // registerUser를 활용하여 유저를 등록하세요.\r\n    // 등록했으면 로그인 페이지로 이동하세요.\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Register Page</h2>\r\n      <RegisterForm onSubmit={handleSubmit} />\r\n      <div>\r\n        <Link to=\"/login\">Login</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction UserDetailPage() {\r\n  // 회원의 정보를 출력하는 기능을 구현하세요.\r\n  // 유저 정보는 location.state.user에 있습니다.\r\n  // PrivateRoute 컴포넌트는 유저 정보가 없을 경우 로그인 페이지로 사용자를 리다이렉트합니다.\r\n  const location = useLocation()\r\n  const user = location.state.user\r\n  useEmptyLocationState();\r\n\r\n  const email = \"test@email.com\";\r\n\r\n  return (\r\n    <div>\r\n      <h2>Welcome!</h2>\r\n\r\n      <div>\r\n        <em>email : {user.email}</em>\r\n      </div>\r\n\r\n      <div>\r\n        <Link to=\"/login\">Logout</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// location state를 지우는 헬퍼 함수입니다.\r\nfunction useEmptyLocationState() {\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    return () => history.replace();\r\n  }, [history]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}